plugins {
	id 'org.springframework.boot' version '2.6.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'idea'
}

group = 'ru.korshun'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = JavaVersion.toVersion("11")
	targetCompatibility = JavaVersion.toVersion("11")
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-batch:2.6.2'
	implementation 'org.springframework.boot:spring-boot-starter-web:2.6.2'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation 'org.springdoc:springdoc-openapi-ui:1.6.3'
	implementation 'org.springdoc:springdoc-openapi-data-rest:1.6.3'
	implementation 'org.springdoc:springdoc-openapi-security:1.6.3'

	implementation "org.mapstruct:mapstruct:1.4.2.Final"

	implementation 'com.github.javafaker:javafaker:1.0.2'

	implementation 'org.projectlombok:lombok:1.18.22'

	implementation 'org.postgresql:postgresql:42.3.1'

	implementation 'com.google.code.gson:gson:2.8.9'

	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	implementation 'org.apache.commons:commons-csv:1.9.0'

	implementation 'org.json:json:20211205'

	implementation 'org.flywaydb:flyway-core:8.4.1'

	annotationProcessor 'org.projectlombok:lombok:1.18.22'
	annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

bootJar {
	archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
}

test {
	useJUnitPlatform()
}
